function [ trainingResult, testResult, testCorrectIdx ] = TestPELM2Params_2(...
    trainingData_1, trainingData_2, trainingCode, trainingLabel,...
    testData_1, testData_2, testCode, testLabel, data_feature, varargin)
%TESTPELM2PARAMS Summary of this function goes here
%   Detailed explanation goes here

    distFunction = getAdditionalParam( 'distFunction', varargin, 'euclidean' );  % euclidean cosine
    hiddenNodes = getAdditionalParam( 'hiddenNodes', varargin, [100] );
    regularizationC = getAdditionalParam( 'regularizationC', varargin, 1 );
    combine_rule = getAdditionalParam( 'combine_rule', varargin, 'sum' ); % sum minus multiply distance mean
    seed = getAdditionalParam( 'seed', varargin, 1 );
    select_weight_type = getAdditionalParam( 'select_weight_type', varargin, 'random-select' ); % randomselect randomgenerate
    
    % test training data
    [~, score, mdl, label_mat, trainingTime, testTime] = pelm2Classify_2(...
        trainingData_1, trainingData_2, trainingLabel, trainingCode, ...
        trainingData_1, trainingData_2, trainingLabel, trainingCode, data_feature, ...
        'seed', seed, 'combine_rule', combine_rule, ...
        'distFunction', distFunction, 'hiddenNodes', hiddenNodes, ...
        'regularizationC', regularizationC, 'select_weight_type', select_weight_type);
    trainingResult = array2table( ...
        {hiddenNodes regularizationC score.FMR_0d01 score.AUC score.EER score.FMR_0d1 label_mat mdl trainingTime testTime}, ...
        'VariableNames', {'hiddenNodes', 'regC', ...
        'score_FMR_0d01', 'score_AUC', 'score_EER', 'score_FMR_0d1', ...
        'label_mat', 'model', 'trainingTime', 'testTime'});
    
    
    % test test data
    [~, score, mdl, label_mat, trainingTime, testTime] = pelm2Classify_2( ...
        trainingData_1, trainingData_2, trainingLabel, trainingCode, ...
        testData_1, testData_2, testLabel, testCode, data_feature, ...
        'seed', seed, 'combine_rule', combine_rule, ...
        'distFunction', distFunction, 'hiddenNodes', hiddenNodes, ...
        'regularizationC', regularizationC, 'select_weight_type', select_weight_type);
    testResult = array2table( ...
        {hiddenNodes regularizationC score.FMR_0d01 score.AUC score.EER score.FMR_0d1 label_mat mdl trainingTime testTime}, ...
        'VariableNames', {'hiddenNodes', 'regC', ...
        'score_FMR_0d01', 'score_AUC', 'score_EER', 'score_FMR_0d1', ...
        'label_mat', 'model', 'trainingTime', 'testTime'});
    
    testCorrectIdx = find(label_mat.labels==label_mat.predict_labels);
end

